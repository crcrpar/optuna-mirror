name: examples

on:
  pull_request: {}
    # paths:
    #   - 'examples/**/*.py'

jobs:
  run_updated:

    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: setup-python${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: set up dependencies cache
      uses: actions/cache@v2
      env:
        cache-name: cache-dependencies
      with:
        path: /opt/hostedtoolcache/Python/**/site-packages
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}
        restore-keys: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-
    - name: install dependencies (apt)
      run: |
        sudo apt-get update
        sudo apt-get -y install openmpi-bin libopenmpi-dev
    - name: install dependencies (python)
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools
        python setup.py sdist

        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off $(ls dist/*.tar.gz)
        python -c 'import optuna'

        # Install all dependencies needed for examples.
        pip install --progress-bar off $(ls dist/*.tar.gz)[example] -f https://download.pytorch.org/whl/torch_stable.html
    - id: files
      uses: jitterbit/get-changed-files@v1
    - name: run changed examples
      env:
        OMP_NUM_THREADS: 1
      run: |
        if [ ${{ matrix.python-version }} = 3.5 ]; then
          IGNORES='chainermn_.*|pytorch_lightning.*|fastai_.*|allennlp_.*|catalyst_.*|sb3_.*'
        elif [ ${{ matrix.python-version }} = 3.8 ]; then
          IGNORES='chainermn_.*|dask_ml_.*|keras_.*|tensorboard_.*|tensorflow_.*|tfkeras_.*|fastai_.*|allennlp_.*'
        else
          IGNORES='chainermn_.*'
        fi

        for file in ${{ steps.files.outputs.all }}
        do
          echo $file
          if [[ $file == "**/examples/**/*.py" ]]; then
            python $file ? /dev/null
            if grep -e '\-\-pruning' $file > /dev/null; then
              echo $file --pruning
              python $file --pruning > /dev/null
            fi
          fi
        done
    - name: run changed multi-node examples
      run: |
        STORAGE_URL=sqlite:///example.db
        for file in ${{ steps.files.outputs.all }}
        do
          echo $file
          if [[ $file == "**/examples/**/*.py" ]]; then
            STUDY_NAME=`optuna create-study --storage $STORAGE_URL`
            mpirun -n 2 -- python $file $STUDY_NAME $STORAGE_URL > /dev/null
          fi
        done
      env:
        OMP_NUM_THREADS: 1
