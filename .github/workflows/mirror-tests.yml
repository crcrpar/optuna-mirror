name: Mirrored

on:
  push:
    branches:
      - master
      - main
  pull_request: {}

jobs:
  tests:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.7, 3.8]

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup cache
      uses: actions/cache@v2
      env:
        cache-name: test
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}-v1
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}

    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools

        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version

        pip install --progress-bar off .[tests]
        pip install --progress-bar off .[optional]

        # Required for samplers_tests/test_samplers.py.
        # TODO(hvy): Fix samplers_tests/test_samplers.py to not require optional depenendencies and remove these installs.
        pip install scikit-optimize
        pip install cma

    - name: Tests
      run: |
        pytest tests --ignore tests/integration_tests

  integration-tests:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup cache
      uses: actions/cache@v2
      env:
        cache-name: test-integration
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}-v1
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get -y install openmpi-bin libopenmpi-dev

    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools

        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version

        pip install --progress-bar off .[tests]
        pip install --progress-bar off .[integration] -f https://download.pytorch.org/whl/torch_stable.html

    - name: Tests
      run: |
        if [ ${{ matrix.python-version }} = 3.8 ]; then
          pytest tests/integration_tests \
            --ignore tests/integration_tests/test_fastai.py \
            --ignore tests/integration_tests/allennlp_tests/test_allennlp.py
        else
          # pytest cannot collect allennlp tests with allennlp==1.0.0.
          pytest -s tests/integration_tests
        fi

    - name: Tests MPI
      run: |
        mpirun -n 2 -- pytest tests/integration_tests/test_chainermn.py
      env:
        OMP_NUM_THREADS: 1
