name: mac-examples

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  examples:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Setup cache
      uses: actions/cache@v2
      env:
        cache-name: test-integration
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-3.7-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}-v1
        restore-keys: |
          ${{ runner.os }}-3.7-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}

    - name: Setup mac environment
      run: |
        brew install libomp
        brew install open-mpi

    - name: Install (Python)
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools
        python setup.py sdist

        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off $(ls dist/*.tar.gz)
        python -c 'import optuna'

        # Install all dependencies needed for examples.
        pip install --progress-bar off $(ls dist/*.tar.gz)[example] -f https://download.pytorch.org/whl/torch_stable.html

        # TODO (crcrpar): Allow fastaiv2 example once https://forums.fast.ai/t/ganlearner-error-no-implementation-found-on-types-that-implement-invisibletensor/83451/7 gets resolved.
    - name: Run examples
      run: |
        IGNORES='chainermn_.*|fastai*|rapids_.*'

        for file in `find examples -name '*.py' -not -name '*_distributed.py' | grep -vE "$IGNORES"`
        do
          echo $file
          python $file > /dev/null
          if grep -e '\-\-pruning' $file > /dev/null; then
            echo $file --pruning
            python $file --pruning > /dev/null
          fi
        done
      env:
        OMP_NUM_THREADS: 1

    - name: Run Jupyter notebook examples
      run: |
        for file in `find examples -name '*.ipynb'`
        do
          echo $file
          pytest --nbval-lax $file > /dev/null
        done
      env:
        OMP_NUM_THREADS: 1
    - name: Run multi-node examples
      run: |
        STORAGE_URL=sqlite:///example.db
        for file in `find examples -name 'chainermn_*.py'`
        do
          echo $file
          STUDY_NAME=`optuna create-study --storage $STORAGE_URL`
          mpirun -n 2 -- python $file $STUDY_NAME $STORAGE_URL > /dev/null
        done
      env:
        OMP_NUM_THREADS: 1
    - name: Run Hydra examples
      run: |
        for file in `find examples/hydra -name '*.py'`
        do
          echo $file
          python $file --multirun > /dev/null
        done
      env:
        OMP_NUM_THREADS: 1
